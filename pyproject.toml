[project]
name = "tempo-air-quality"
version = "0.1.0"
description = "NASA TEMPO Air Quality Forecasting Platform using satellite data and machine learning"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "NASA Space Apps Team", email = "team@example.com"}
]
keywords = ["air-quality", "nasa", "tempo", "forecasting", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Minimal core dependencies - keeps install fast!
    # Install extras for more features: uv pip install -e ".[full]"
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
# Full installation with all features
full = [
    # Database
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "geoalchemy2>=0.14.0",
    "alembic>=1.12.0",
    
    # Caching & Task Queue
    "redis>=5.0.0",
    "celery>=5.3.0",
    
    # Data Processing
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "xarray>=2023.10.0",
    "netCDF4>=1.6.0",
    "h5py>=3.10.0",
    
    # Machine Learning
    "scikit-learn>=1.3.0",
    "tensorflow>=2.14.0",
    "torch>=2.1.0",
    
    # API & HTTP (additional)
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Geospatial
    "shapely>=2.0.0",
    "pyproj>=3.6.0",
    
    # Monitoring & Logging
    "python-json-logger>=2.0.0",
    
    # Notifications
    "twilio>=8.10.0",
    "sendgrid>=6.11.0",
]

# Development tools
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    
    # Code Quality
    "black>=23.10.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "ruff>=0.1.0",
    
    # Development Tools
    "pre-commit>=3.5.0",
    "ipython>=8.16.0",
    
    # Jupyter
    "jupyter>=1.0.0",
    "ipykernel>=6.27.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
]

[project.scripts]
tempo-api = "backend.src.api.main:main"
tempo-worker = "backend.src.pipeline.worker:main"

[project.urls]
Homepage = "https://github.com/bethwel3001/predictions"
Documentation = "https://github.com/bethwel3001/predictions/blob/main/README.md"
Repository = "https://github.com/bethwel3001/predictions"
Issues = "https://github.com/bethwel3001/predictions/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend/src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=backend/src",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "sklearn.*",
    "tensorflow.*",
    "torch.*",
]
ignore_missing_imports = true
